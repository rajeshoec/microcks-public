openapi: '3.0.2'
info:
  title: Student test API
  version: '1.2'
paths:
  /students:
    get:
      tags:
        - "student"
      summary: get the list of /students
      description: get the list of /students
      responses:
        '200':
          description: get list of students
          content:
            application/json:
              schema:
                type: array
                $ref: '#/components/schemas/Student'
              examples:
                students_json:
                  value:
                    - id: 2
                      name: rajesh
                    - id: 4
                      name: manash
    post:
      tags:
        - "student"
      summary: add new student
      description: add a new student
      requestBody:
        description: Cretae a new student
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
            examples:
              rajesh:
                value:
                  id: 124
                  name: rajesh
              manash:
                value:
                  id: 78
                  name: manash
              other:
                value: demo

      responses:
        '200':
          description: Successful Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
              examples:
                rajesh:
                    value:
                      id: "{{request.body/id}}"
                      name: "{{request.body/name}}"
                manash:
                    value:
                      id: "{{request.body/id}}"
                      name: "{{request.body/name}}"
        '405':
          description: Invalid input
          content:
            application/json:
              schema:
                type: string
              examples:
                other:
                  value: Invalid input json

  /students/findByName:
    get:
      tags:
        - "student"
      summary: Finds the student by name
      description: Finds the student by name
      parameters:
        - examples:
            student1:
              value: rajesh
            student2:
              value: manash
            other:
              value: any
          name: fname
          in: query
          required: false
          explode: true
          schema:
            type: string
            default: banty
            enum:
              - banty
              - rajesh
              - manash
      responses:
        '200':
          description: get the students by name
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
              examples:
                student1:
                  value:
                    id: "{{randomString(64)}}"
                    name: rajesh
                student2:
                  value:
                    id: "{{randomString(64)}}"
                    name: manash
        '404':
          description: students not found
          content:
            application/json:
                schema:
                  type: string
                examples:
                  other:
                    value: students are not found 
                       
  /students/{id}:
    get:
      tags:
        - "student"
      summary: get the perticulat student
      description: get the single student from list
      parameters:
        - examples:
            123:
              value: 123
            unknown:
             value: other
            567:
              value: 567
          name: id
          in: path
          description: the id that needs to be fecthed
          required: true
          schema:
            type: integer

      responses:
        '200':
          description: student for specific id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
              examples:
                123:
                  value: 
                    id: 123
                    name: rajesh
                567:
                  value:
                    id: 567
                    name: manash
        '400':
          description: Invalid id supplied
        '404':
          description: user not found
          content:
            application/json:
              schema:
                type: string
              examples:
                unknown:
                  value: "student is not in the database"
    delete:
      tags:
        - "student"
      summary: delete a student by Id
      description: delete a student by Id
      parameters:
        - examples:
            123:
              value: 123
            456:
              value: 456
            unknown:
              value: notfpund
          name: id
          in: path
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: order id deleted
          content:
            application/json:
              schema:
                type: string
              examples:
                123:
                  value: 123 student id deleted successfully 
                456:
                  value: 456 student id deleted successfully
        '404':
          description: order id not found
          content:
            application/json:
              schema:
                type: string
              examples:
                unknown:
                  value: student id not found

components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
        


        
